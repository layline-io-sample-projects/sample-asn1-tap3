{
  "@type" : "processorFlow/javaScript",
  "assetClass" : "processorFlow",
  "assetType" : "javaScript",
  "uuid" : "e30b3c06-718a-44e5-af29-0a920d44807c",
  "checksum" : "f9e8017a7ed733650ea048418119c74533e7c06b25b76e172079caf49c70433b",
  "name" : "TAP3-Debug",
  "inputPorts" : [
    {
      "modifier" : "add",
      "uuid" : "ede2ea8f-288d-46f7-8632-e0840a377d77",
      "name" : "TAP3-Input",
      "description" : null
    }
  ],
  "outputPorts" : [
    {
      "modifier" : "add",
      "uuid" : "a5c709ae-2cae-48d9-afd1-431ab7c76167",
      "name" : "TAP3-Output",
      "description" : null
    }
  ],
  "failureHandling" : { },
  "scriptLines" : [
    "let OUTPUT_PORT = null;",
    "",
    "/**",
    " * Do the initial setup",
    " */",
    "function onInit() {",
    "    processor.logInfo('--- onInit ---');",
    "",
    "    OUTPUT_PORT = processor.getOutputPort('TAP3-Output');",
    "}",
    "",
    "",
    "/**",
    " * Handle the start of a stream",
    " */",
    "function onStreamStart() {",
    "    processor.logInfo('--- onStreamStart ---');",
    "}",
    "",
    "",
    "/**",
    " * Handle a message",
    " */",
    "function onMessage(message) {",
    "    processor.logInfo('--- onMessage ---');",
    "    ",
    "    if (message.type.Detail) {",
    "        onDetail(message);",
    "    } else if (message.type.Header) {",
    "        onHeader(message);",
    "    } else if (message.type.Trailer) {",
    "        onTrailer(message);",
    "    }",
    "",
    "    processor.logInfo('--- message: ' + message);",
    "",
    "    stream.emit(message, OUTPUT_PORT);",
    "}",
    "",
    "/**",
    " * Handle message header",
    " */",
    "function onHeader (message) {",
    "    processor.logInfo('--- onHeader ---');",
    "}",
    "",
    "/**",
    " * Handle message detail",
    " */",
    "function onDetail (message) {",
    "    processor.logInfo('--- onDetail ---');",
    "}",
    "",
    "",
    "/**",
    " * Handle message trailer",
    " */",
    "function onTrailer (message) {",
    "    processor.logInfo('--- onTrailer ---');",
    "}",
    "",
    "/**",
    " * Handle the commit",
    " */",
    "function onCommit() {",
    "    processor.logInfo('--- onCommit ---');",
    "}",
    "",
    "/**",
    " * Handle the rollback of the stream transaction",
    " */",
    "function onRollback() {",
    "    processor.logInfo('--- onRollbackj ---');",
    "}",
    "",
    "/**",
    " * Handle the cancel of the stream transaction",
    " */",
    "function onCancel() {",
    "    processor.logInfo('--- onCancel ---');",
    "}"
  ],
  "isInstance" : false
}